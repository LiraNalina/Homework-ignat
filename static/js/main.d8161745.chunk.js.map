{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h3/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/SuperButton.tsx","p2-homeworks/h3/SuperInput.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/Trainee.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","src","alt","post","name","postText","time","messageData","HW1","Affair","main","affair","priority","delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperButton","red","restProps","finalClassName","default","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","input","SuperInput","count","GreetingContainer","users","addUserCallback","setName","setError","length","trimmedName","trim","alert","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","Junior","Trainee","PATH","Pages","path","element","to","Header","link","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d8161745.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Affairs_main__vIX0L\",\"button\":\"Affairs_button__QkljL\",\"affair\":\"Affairs_affair__3NJhA\",\"priority\":\"Affairs_priority__3Uk8G\",\"delete\":\"Affairs_delete__2gbhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__5xGW7\",\"post\":\"Message_post__2Nrvj\",\"avatar\":\"Message_avatar__7MhV9\",\"name\":\"Message_name__3hYns\",\"postText\":\"Message_postText__36MQ4\",\"time\":\"Message_time__ElwUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__DWPNm\",\"error\":\"Greeting_error__2Huu6\",\"input\":\"Greeting_input__W4cRD\",\"errorInput\":\"Greeting_errorInput__3RsRT\",\"button\":\"Greeting_button__12cmu\",\"count\":\"Greeting_count__NX775\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3t_V4\",\"superInput\":\"SuperInputText_superInput__2xNF-\",\"errorInput\":\"SuperInputText_errorInput__2ERGI\",\"error\":\"SuperInputText_error__1yNSK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3YElf\",\"superInput\":\"SuperInputText_superInput__3z9u3\",\"errorInput\":\"SuperInputText_errorInput__FPJji\",\"error\":\"SuperInputText_error__351s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2tyBE\",\"red\":\"SuperButton_red__2-gn-\",\"button\":\"SuperButton_button__2QT5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__2Xnoh\",\"active\":\"Header_active__2TdQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1mjSF\",\"red\":\"SuperButton_red__1zyo-\",\"button\":\"SuperButton_button__3bZru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3qKlx\",\"column\":\"HW4_column__1Keh4\",\"testSpanError\":\"HW4_testSpanError__X9LN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__1R8Rf\",\"checkbox\":\"SuperCheckbox_checkbox__2_88r\",\"spanClassName\":\"SuperCheckbox_spanClassName__3j7aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2iw8o\"};","import React from 'react'\n\nimport s from './Message.module.css'\n\nexport type MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst Message: React.FC<MessageType> = (props: MessageType) => {\n    return (\n\n        <div className={s.message}>\n            <img className={s.avatar} src={props.avatar} alt=\"post\"></img>\n\n            <div className={s.post}>\n                <span className={s.name} >{props.name}</span>\n                <br />\n                <span className={s.postText}>{props.message}</span>\n\n                <span className={s.time}>{props.time}</span>\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Trainy',\n    message: 'npm start нажимал?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }// need to fix\n\n    return (\n        <div className={s.main}>\n            {/* // show some text */}\n            <div className={s.affair}>{props.affair.name}</div>\n            <div className={s.priority}>{props.affair.priority}</div>\n            <button className={s.delete} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button className={s.button} onClick={setAll}>All</button>\n            <button className={s.button} onClick={setHigh}>High</button>\n            <button className={s.button} onClick={setMiddle}>Middle</button>\n            <button className={s.button} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter((a) => filter === a.priority) // need to fix\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(a => a._id !== _id) // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? s.superInput: ''} ` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText","import React, { ChangeEvent } from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from './SuperButton'\nimport SuperInput from './SuperInput'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.input // need to fix with (?:)\n\n    return (\n        <div>\n            <SuperInput value={name} onChange={setNameCallback} className={inputClass}/>\n            <span className={s.error}>{error}</span>\n            <SuperButton className={s.button} onClick={addUser}>add</SuperButton>\n            <span className={s.count}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting","import React, { ChangeEvent, useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimmedName = e.currentTarget.value.trim()\n\n        if (trimmedName) {\n            setName(trimmedName)\n            setError('')\n        } else {\n            setName('') // need to fix\n            setError(\"text is required!\")\n        }\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`) // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n    let newUser = {name: '', _id: v1()}\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n        \n    }\n    \n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className} ` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {<span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => { \n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(true)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\r\nimport HW3 from \"../../h3/HW3\";\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n          JuneJunovsckiy\r\n            <HW3/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n","import React from \"react\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction Trainee() {\r\nreturn (\r\n    <div>\r\n        <HW4/>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Trainee","import React from 'react'\nimport {Route, Routes, Navigate} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport Trainee from \"./pages/Trainee\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    TRAINEE: '/trainee',\n    // add paths\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={'/'} element={<Navigate to={PATH.JUNIOR}/>}/>\n                <Route path={'/'} element={<Navigate to={PATH.TRAINEE}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.TRAINEE} element={<Trainee/>}/>\n\n                // add routes\n\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Pages\";\nimport s from \"./Header.module.css\"\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link}> pre-junior </NavLink>\n            <NavLink to={PATH.JUNIOR} className={s.link}> junior </NavLink>\n            <NavLink to={PATH.TRAINEE} className={s.link}> trainee </NavLink>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeWorks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}